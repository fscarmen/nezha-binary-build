name: Build nezha binary

on:
  workflow_run:
    workflows: ["Run Tests"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'naiba/nezha'

      - name: apply patch
        run: |
          wget -qO getversion.patch https://gist.githubusercontent.com/applexad/5b4a85f5fb0b4d58e28497a63eac7f0e/raw/eedc24c61c0b54b2eb86ba9acdca953b436f7391/getversion.patch
          git apply getversion.patch

      - name: xgo build
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: 1.21
          dest: dist
          pkg: cmd/dashboard
          prefix: dashboard
          targets: linux/amd64,linux/arm64,linux/arm-7,linux/s390x,linux/riscv64 # linux/386,
          v: true
          x: false
          race: false
          ldflags: -s -w
          buildmode: default

      - name: xgo build static
        uses: crazy-max/ghaction-xgo@v2
        with:
          xgo_version: latest
          go_version: 1.21
          dest: musldist
          pkg: cmd/dashboard
          prefix: dashboard-musl
          targets: linux/amd64,linux/arm64,linux/arm-7,linux/s390x,linux/riscv64 # linux/386,
          v: true
          x: false
          race: false
          ldflags: -s -w --extldflags '-static -fpic'
          buildmode: default
      
      - name: package resource dir
        run: tar czf resource.tar.gz resource

      - name: Upload dist
        uses: actions/upload-artifact@main
        with:
          name: nezha-dashboard
          path: |
              dist
              musldist
              resource.tar.gz

      - name: Generate release tag
        id: tag
        run: echo "release_tag=$(cat service/singleton/singleton.go | grep -oP 'v\d+\.\d+\.\d+')" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
              dist/*
              musldist/*
              resource.tar.gz

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_KEY }}
